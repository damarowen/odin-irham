// Package adapters are the glue between components and external sources.
// # This manifest was generated by ymir. DO NOT EDIT.
package adapters

import (
	"fmt"
	"net/http"
	"net/url"

	"gitlab.playcourt.id/nanang_suryadi/odin/pkg/shared"
)

// PokemonRest is data of instances.
type PokemonRest struct {
	URL    string
	driver *http.Client
}

// Open is open the connection of Pokemon.
func (p *PokemonRest) Open() (*http.Client, error) {
	if p.driver == nil {
		return nil, fmt.Errorf("driver was failed to connected")
	}
	return p.driver, nil
}

// Connect is connected the connection of Pokemon.
func (p *PokemonRest) Connect() (err error) {
	var base *url.URL
	base, err = url.Parse(p.URL)
	p.driver = &http.Client{Transport: &shared.DefaultClientHttp{BaseUrl: base}}
	return nil
}

// Disconnect is disconnect the connection of Pokemon.
func (*PokemonRest) Disconnect() error {
	return nil
}

// WithPokemonRest option function to assign on adapters.
func WithPokemonRest(driver Driver[*http.Client]) Option {
	return func(a *Adapter) {
		if err := driver.Connect(); err != nil {
			panic(err)
		}
		open, err := driver.Open()
		if err != nil {
			panic(err)
		}
		a.PokemonRest = open
	}
}
